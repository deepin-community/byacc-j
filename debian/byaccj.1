.\"	%W%	%R% (Berkeley) %E%
.\"
.TH YACC 1 "July\ 15,\ 1990"
.UC 6
.SH NAME
Yacc \- an LALR(1) parser generator for Java
.SH SYNOPSIS
.B byaccj [ -dlrtvJ ] [ -b
.I prefix
.B ] [-Jclass=
.I classname
.B ] [-Jpackage=
.I package_name
.B ] [-Jextends=
.I extends_name
.B ] [-Jimplements=
.I implements_name
.B ] [-Jsemantic=
.I semantic_type
.B ] [-Jnorun] [-Jnocontruct] [-Jstack=
.I NNN
.B ] [-Jnodebug] [-Jfinal] [-Jthrows=
.I exception_list
.B ]
.I filename
.SH DESCRIPTION
.I Yacc
reads the grammar specification in the file
.I filename
and generates an LR(1) parser for it.
The parsers consist of a set of LALR(1) parsing tables and a driver routine
written in the C programming language.
.I Yacc
normally writes the parse tables and the driver routine to the file
.IR y.tab.c.
.PP
The following options are available:
.RS
.TP
\fB-b \fIprefix\fR
The
.B -b
option changes the prefix prepended to the output file names to
the string denoted by
.IR prefix.
The default prefix is the character
.IR y.
.TP
.B -d
The \fB-d\fR option causes the header file
.IR y.tab.h
to be written.
.TP
.B -l
If the
.B -l
option is not specified,
.I yacc
will insert \#line directives in the generated code.
The \#line directives let the C compiler relate errors in the
generated code to the user's original code.
If the \fB-l\fR option is specified,
.I yacc
will not insert the \#line directives.
\&\#line directives specified by the user will be retained.
.TP
.B -r
The
.B -r
option causes
.I yacc
to produce separate files for code and tables.  The code file
is named
.IR y.code.c,
and the tables file is named
.IR y.tab.c.
.TP
.B -t
The
.B -t
option changes the preprocessor directives generated by
.I yacc
so that debugging statements will be incorporated in the compiled code.
.TP
.B -v
The
.B -v
option causes a human-readable description of the generated parser to
be written to the file
.IR y.output.
.TP
.B -J
The
.B -J
option switches from C/C++ to Java output. Not necessary if other -J flags are used.
.TP
.B -Jclass=<classname>
Changes the name of the Java class (and .java file) to 
.I classname
.TP
.B -Jpackage=<packagename>
 Changes the package in which the parser resides from the default <nothing> to
.I packagename
.TP
.B -Jextends=<extend_name>
 Changes the class the parser extends from the default <nothing> to
.I extend_name
.TP
.B -Jimplements=<implement_name>
 Changes the interface the parser implements from the default <nothing> to
.I implement_name
.TP
.B -Jsemantic=<semantic_type>
  Changes the semantic (value of the rules' variables) type to
.I semantic_type.
No extra class will be generated.
.TP
.B -Jnorun
The
.B -Jnorun
option informs Byacc to not generate a run() method. Useful when working with threads.
.TP
.B -Jnoconstruct
The
.B -Jnoconstruct
option informs Byacc to not generate constructors. Useful when extending classes. 
.TP
.B -Jstack=<NNN>
 Changes the stack size from default 500 to
.I NNN
.TP
.B -Jnodebug
The
.B -Jnodebug
option informs Byacc to omit debugging code for further better performance.
.TP
.B -Jfinal
The
.B -Jfinal
option makes generated class final.
.TP
.B -Jthrows=<exception_list>
 Informs Byacc to declare thrown exceptions for yyparse() method.
.RE
.PP
If the environment variable TMPDIR is set, the string denoted by
TMPDIR will be used as the name of the directory where the temporary
files are created.
.SH FILES
.IR y.code.c
.br
.IR y.tab.c
.br
.IR y.tab.h
.br
.IR y.output
.br
.IR /tmp/yacc.aXXXXXX
.br
.IR /tmp/yacc.tXXXXXX
.br
.IR /tmp/yacc.uXXXXXX
.SH DIAGNOSTICS
If there are rules that are never reduced, the number of such rules is
reported on standard error.
If there are any LALR(1) conflicts, the number of conflicts is reported
on standard error.
